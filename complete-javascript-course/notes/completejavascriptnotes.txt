Functions 

- Store the Return value of a function in a variable to use it anywhere! Give it a name then call the function! ex const x = func(parameter)! **IMPORTANT**
- Receive input data, transform data, then output data!
- array.indexOf() will return a number!
- array.includes() will return true or false!
 
 ---LOOPS--

 - Continue - if the condition is not true the code will hit continue and will not execute what is below the continue. It will go back to the next interation

 - Break - The break will immidiattly exit the whole loop when the condition is met. If (x === 'number') break; it wont execute nothing after this.


---SOLVING PROBLEMS WORK FLOW---

Project Manager: "We need a function that reverses whatever we pass into it"

1- What does "whatever" even mean in this context?
What should be reversed? Answer: Only strings, numbers and arrays make sense
to reverse...
- What to do if something else is passed in?
- What should be returned? Should it always be a string, or shoulod the type
be the same as passed in?
- How to recognize whether the argument is a number, a string or an array?
- How to reverse a number, a string and an array?

2- Dived and Conquer
- Sub-Problems:

- Check if argument is a number, a string or an array
- Implement reversing a number
- Implement reversing a string 
- Implement reversing an array
- Return a value

3- The research:

- How to check if a value is a number in javascript
- How to check if a value is a string in javascript
- How to check if a value is an array in javascript
- How to reverse a number in javascript
- How to reverse a string in javascript
- How to reverse an array in javascript

4- Write psudo code ex:

function reverse(value)

if value type !string && !number $$ !array
return value 

if value type == string 
reverse string
if value type == number
reverse number
if value type == array
reverse array

return reversed value


------------------------------------------------------






















 -- vscode settings --

- For todo Highlights settings. "FIX TODO" This config. is under settings.json on vscode under settings the third icond from right to left the icon reads open settings.json when mouse over.

- Prettier default format. 

- go to settings type default form and on editor choos Prettier Code formatter
- go to settings  type formatons and check the box it will save and format the code.


- USER SNIPPETS ----

- under preferences > configure user snippets 
- look for the file I created Global snippets.code.snippets